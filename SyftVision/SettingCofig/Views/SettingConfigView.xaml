<UserControl x:Class="SettingConfig.Views.SettingConfigView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SettingConfig.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
             mc:Ignorable="d"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True" >
    <Grid Margin="10" Background="Bisque">
        <Grid.RowDefinitions>
            <RowDefinition Height="65"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <StackPanel>
                <ToolBarTray>
                    <ToolBar Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="False">
                        <materialDesign:Badged ToolBar.OverflowMode="AsNeeded" CornerRadius="5">
                            <materialDesign:Badged.Badge>
                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton IsChecked="{Binding LocalSelectIsChecked}" Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" ToolTip="Select Batch Config From Local" Width="30" Height="15">
                                        <materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                                            <SolidColorBrush Color="Yellow" />
                                        </materialDesign:ToggleButtonAssist.SwitchTrackOnBackground>
                                    </ToggleButton>
                                    <materialDesign:PackIcon Kind="DesktopClassic" VerticalAlignment="Center"/>
                                </StackPanel>
                            </materialDesign:Badged.Badge>
                            <TextBox materialDesign:HintAssist.Hint="IP Address" Text="{Binding IPAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Width="125" Margin="5"/>
                        </materialDesign:Badged>
                        <Separator/>
                        <Button ToolTip="Open" Content="{materialDesign:PackIcon Kind=FolderOpen}" Command="{Binding OpenCommand}"/>
                        <Button ToolTip="Add" Content="{materialDesign:PackIcon Kind=FolderPlus}" Command="{Binding AddCommand}"/>
                        <Button>
                            <materialDesign:PopupBox ToolTip="Save" StaysOpen="True">
                                <materialDesign:PopupBox.ToggleContent>
                                    <materialDesign:PackIcon Kind="ContentSaveCogOutline" />
                                </materialDesign:PopupBox.ToggleContent>
                                <StackPanel Margin="10">
                                    <TextBox MaxHeight="400" MinWidth="200" Text="{Binding Comments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" materialDesign:HintAssist.Hint="Report Comments" Style="{StaticResource MaterialDesignOutlinedTextBox}" AcceptsReturn="True" TextWrapping="Wrap" SpellCheck.IsEnabled="True" VerticalScrollBarVisibility="Auto" />
                                    <Button ToolTip="Save Process" Content="{materialDesign:PackIcon Kind=ContentSaveOutline}" Command="{Binding SaveCommand}" Style="{StaticResource MaterialDesignOutlinedButton}" Margin="0 10 0 0"/>
                                </StackPanel>
                            </materialDesign:PopupBox>
                        </Button>
                        <Separator/>
                        <Button>
                            <materialDesign:PopupBox ToolTip="Batch Info" StaysOpen="True">
                                <materialDesign:PopupBox.ToggleContent>
                                    <materialDesign:PackIcon Kind="InformationOutline" />
                                </materialDesign:PopupBox.ToggleContent>
                                <DataGrid Margin="10" AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                              ItemsSource="{Binding SyftInfoList}">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Header="Category">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Category}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Header="Item">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Item}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Header="Content">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Content}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </materialDesign:PopupBox>
                        </Button>
                        <Button ToolTip="Scan List" Content="{materialDesign:PackIcon Kind=FormatListBulletedType}" Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}" CommandParameter="{x:Static Dock.Right}"/>
                    </ToolBar>
                </ToolBarTray>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <DataGrid AutoGenerateColumns="False" CanUserReorderColumns="False" CanUserAddRows="False" ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ItemsSource="{Binding ComponentList}" SelectedItem="{Binding SelectedComponent}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Compound" DisplayIndex="0">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Compound, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CompoundEnable}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Reagent" DisplayIndex="1">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Reagent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ReagentEnable}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Production" DisplayIndex="2">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Production, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ProductionEnable}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Limit" DisplayIndex="3">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Limit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}" IsEnabled="{Binding LimitEnable}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Delete" DisplayIndex="4">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Command="Delete" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Content="{materialDesign:PackIcon Kind=DeleteOutline}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Add" DisplayIndex="5">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Command="{Binding Path=DataContext.AddUpCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}}" 
                                            Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Content="{materialDesign:PackIcon Kind=TableRowPlusBefore}"/>
                                    <Button Command="{Binding Path=DataContext.AddDownCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}}"
                                            Style="{StaticResource MaterialDesignFloatingActionMiniButton}" Content="{materialDesign:PackIcon Kind=TableRowPlusAfter}" Margin="5 0 0 0"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

    </Grid>
</UserControl>
